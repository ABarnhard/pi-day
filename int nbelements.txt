int nbelements;
float dia=100;
PVector center;
float fc;
float rot;
float a,b,c;
Element [] elements;

void setup() {
  size(600, 600);
  frameRate(100);
  smooth(8);
  ellipseMode(CENTER);
  colorMode(HSB,360,100,100);
  stroke(0);
  strokeWeight(1);
  center=new PVector(width/2,height/2);
  nbelements=int(random(4,30));
  a=random(.5,2);
  b=random(.5,2);
  c=random(.5,2);
  elements=new Element[nbelements];
  rot=random(.01);
  float alpha=TWO_PI/nbelements;
  for (int i=0; i<nbelements; i++) {
    elements[i]=(new Element(i, dia*cos(i*alpha), dia*sin(i*alpha)));
  }
}
void draw(){
  background(128,0,90);
  fc=(float)frameCount/(30.0f+(float)mouseX/5);
  for (int i=0; i<nbelements; i++) {
    fill(lerp(0,360,(i+1)/(float)nbelements),80,80,10);
    elements[i].display();
  }
}
void keyPressed() {
 if(keyCode==32){
   setup();
 }
}
class Element {
  int index;
  float x,y;
  float dx,dy;

  Element(int index, float x, float y) {
    this.index=index;
    this.x=x;
    this.y=y;
  }
  void display() {
    pushMatrix();
    dx=abs(4*dia*sin(fc)*sin(fc*a));
    dy=abs(4*dia*sin(fc*b)*sin(fc*c));
    translate(center.x,center.y);
    //rotate(rot*frameCount);
    ellipse(x,y,dx,dy);
    ellipse(x,y,dy,dx);
    //ellipse(x,y,abs(4*dia*sin(fc*a)*sin(fc*c)),abs(4*dia*sin(fc)*sin(fc*b)));
    popMatrix();
  }
}